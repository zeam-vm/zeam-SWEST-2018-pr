.small
	h2
		span.nonsplit micro Elixir / ZEAM &nbsp;
		span.nonsplit 大域的コード最適化機構

	markdown:
		* GPUの最適化をしようと思ったら，ライブラリの関数の意味を汲み取って大域的に最適化する必要がある

.relative
	pre
		code.lang-elixir.hljs.large
			| 0..10000
			= "\n"
			| |> Enum.map(foo)
			= "\n"
			| |> Enum.map(bar)
	svg.absolute width="864" height="180" viewBox="0, 0, 864, 180"
		ellipse cx="100" cy="24" rx="70" ry="15" stroke="pink" fill="none" stroke-width="5"
		text x="200" y="30" fill="pink" font-size="16px" 単純で均質で大量にあるデータ
		ellipse cx="210" cy="75" rx="30" ry="40" stroke="pink" fill="none" stroke-width="5"
		text x="250" y="75" fill="pink" font-size="16px" 同じような命令列
		text x="400" y="90" fill="yellow" font-size="20px" ライブラリEnumやFlowのレベルで最適化

.small
	markdown:
		* そこで，ライブラリごとにコンパイラの構文木拡張と意味解析器，最適化器を記述できる仕組みを導入する


